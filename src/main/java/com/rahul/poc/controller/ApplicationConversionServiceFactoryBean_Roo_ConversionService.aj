// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.rahul.poc.controller;

import com.rahul.poc.controller.ApplicationConversionServiceFactoryBean;
import com.rahul.poc.domain.Gender;
import com.rahul.poc.domain.Person;
import com.rahul.poc.service.GenderService;
import com.rahul.poc.service.PersonService;
import java.math.BigInteger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    GenderService ApplicationConversionServiceFactoryBean.genderService;
    
    @Autowired
    PersonService ApplicationConversionServiceFactoryBean.personService;
    
    public Converter<Gender, String> ApplicationConversionServiceFactoryBean.getGenderToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rahul.poc.domain.Gender, java.lang.String>() {
            public String convert(Gender gender) {
                return new StringBuilder().append(gender.getGender()).append(" ").append(gender.getGenderAlias()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Gender> ApplicationConversionServiceFactoryBean.getIdToGenderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.rahul.poc.domain.Gender>() {
            public com.rahul.poc.domain.Gender convert(java.math.BigInteger id) {
                return genderService.findGender(id);
            }
        };
    }
    
    public Converter<String, Gender> ApplicationConversionServiceFactoryBean.getStringToGenderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rahul.poc.domain.Gender>() {
            public com.rahul.poc.domain.Gender convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Gender.class);
            }
        };
    }
    
    public Converter<Person, String> ApplicationConversionServiceFactoryBean.getPersonToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rahul.poc.domain.Person, java.lang.String>() {
            public String convert(Person person) {
                return new StringBuilder().append(person.getFName()).append(" ").append(person.getLName()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Person> ApplicationConversionServiceFactoryBean.getIdToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.rahul.poc.domain.Person>() {
            public com.rahul.poc.domain.Person convert(java.math.BigInteger id) {
                return personService.findPerson(id);
            }
        };
    }
    
    public Converter<String, Person> ApplicationConversionServiceFactoryBean.getStringToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rahul.poc.domain.Person>() {
            public com.rahul.poc.domain.Person convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Person.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getGenderToStringConverter());
        registry.addConverter(getIdToGenderConverter());
        registry.addConverter(getStringToGenderConverter());
        registry.addConverter(getPersonToStringConverter());
        registry.addConverter(getIdToPersonConverter());
        registry.addConverter(getStringToPersonConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
